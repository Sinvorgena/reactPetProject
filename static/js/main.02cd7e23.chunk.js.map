{"version":3,"sources":["components/appWrapperContent/Users/Users.module.css","components/Preloader/Preloader.module.css","components/appWrapperContent/Profile/MainScreen.module.css","components/appWrapperContent/Profile/Posts/PostWall/PostWall.module.css","components/appWrapperContent/Profile/Posts/posts.module.css","components/appWrapperContent/Profile/Profile.module.css","components/appWrapperContent/Profile/UserProfile/ChangeAvatar/ChangeAvatar.module.css","components/sideBar/sideBar.module.css","components/appWrapperContent/Profile/UserProfile/UserInfo/UserInfo.module.css","reportWebVitals.js","api/api.js","redux/ProfileReducer.js","redux/DialogsReducer.js","redux/SideBarReducer.js","redux/UsersReducer.js","redux/authReducer.js","redux/appReducer.js","redux/redux-store.js","components/Footer/Footer.jsx","components/appWrapperContent/News/News.jsx","components/appWrapperContent/Music/Music.jsx","components/appWrapperContent/Setting/Setting.jsx","components/common/FormsControls/FormControl.jsx","utils/validators/validator.js","components/appWrapperContent/Dialogs/MessageField/NewMessage/NewMessage.jsx","components/appWrapperContent/Dialogs/MessageField/NewMessage/NewMessageContainer.jsx","components/appWrapperContent/Dialogs/Dialogs.jsx","components/appWrapperContent/Dialogs/DialogItem.jsx","components/appWrapperContent/Dialogs/MessageField/MessagesItem.jsx","assets/829.gif","components/Preloader/Preloader.jsx","components/appWrapperContent/Profile/MainScreen.jsx","components/appWrapperContent/Profile/Posts/NewPosts/NewPosts.jsx","components/appWrapperContent/Profile/Posts/PostWall/Post/Post.jsx","components/appWrapperContent/Profile/Posts/PostWall/PostWall.jsx","components/appWrapperContent/Profile/Posts/NewPosts/NewPostsContainer.jsx","Selectors/Selectors.js","components/appWrapperContent/Profile/Posts/PostWall/PostWallContainer.jsx","components/appWrapperContent/Profile/Posts/Posts.jsx","components/appWrapperContent/Profile/UserProfile/UserInfo/ProfileStatus.jsx","components/appWrapperContent/Profile/UserProfile/UserInfo/UserInfo.jsx","components/appWrapperContent/Profile/UserProfile/ChangeAvatar/ChangeAvatar.jsx","components/appWrapperContent/Profile/UserProfile/UserProfile.jsx","components/appWrapperContent/Profile/UserProfile/UserProfileContainer.jsx","components/appWrapperContent/Profile/Profile.jsx","hoc/withAuthRedirect.js","components/appWrapperContent/Dialogs/DialogsContainer.jsx","assets/profile-02-512.png","components/appWrapperContent/Users/Users.jsx","components/appWrapperContent/Users/UsersContainer.jsx","components/sideBar/Friends/FriendItem/FriendItem.jsx","components/sideBar/Friends/Friends.jsx","components/sideBar/sideBar.jsx","components/sideBar/sideBarContainer.jsx","components/appWrapperContent/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/appWrapperContent/Login.jsx","App.js","index.js","components/appWrapperContent/Profile/UserProfile/UserProfile.module.css","components/common/FormsControls/FormControl.module.css","components/Header/Header.module.css","components/appWrapperContent/Profile/Posts/NewPosts/NewPosts.module.css","components/Footer/Footer.module.css","components/appWrapperContent/Dialogs/DialogItem.module.css","components/appWrapperContent/Dialogs/MessageField/MessagesItem.module.css","components/appWrapperContent/Dialogs/Dialogs.module.css","components/appWrapperContent/Dialogs/MessageField/NewMessage/NewMessage.module.css","components/appWrapperContent/Profile/Posts/PostWall/Post/post.module.css","components/sideBar/Friends/Friends.module.css","components/sideBar/Friends/FriendItem/Frienditem.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instanse","axios","baseURL","headers","withCredentials","Api","getAuthMe","get","response","data","logIn","email","password","post","logOut","delete","getUsers","numberOfUsersOnPage","currentPage","getFollowingUsers","getUserProfile","userId","getUserProfileStatus","setUserProfileStatus","text","put","status","followUser","id","unfollowUser","addPost","nextAvatar","prevAvatar","addAvatar","TOOGLE_IS_WATCHING_ANOTHER_USER_NOW","SET_ANOTHERS_USER_INFO","SET_MAIN_USER_INFO","GET_USER_PROFILE_STATUS_SUCSESS","ProfileDefaulState","userInfoDate","name","birthdate","city","education","webSite","anothersUserInfo","isWatchNow","fullName","aboutMe","photos","large","small","postMessageData","message","likeCounter","user","avatarUrlData","url","mainAvatar","toogleIsWatchingAnotherUserNow","type","setUserProfileStatusSucsess","UserTextStatus","mainUserId","dispatch","window","addMessage","DialogsDefaulState","messageData","avatar","dialogsData","SideBarDefaulState","FOLLOW","UNFOLLOW","SETUSERS","SETTOTALUSERSCOUNT","SETCURRENTPAGE","TOOGLEISLOADING","TOOGLE_IS_FOLLOWING_IN_PROGRESS_USER","SET_FRIEND_DATA","UsersDefaulState","totalUsersCount","isLoading","isFollowingInProgress","usersInProgressFollowing","usersData","followingUsersData","toogleIsLoading","toogleFollowingInProgressUser","setFriendDataSucsess","setUserData","console","log","items","SET_AUTH_USER_DATA","SET_ANOTHER_USER_ID","authDefaulState","login","isAuth","anotherUserId","setAuthUserDataSucsess","userAuthdata","setAuthUserData","resultCode","responsUser","responseStatus","mainUserInfo","SET_INITIALIZIED","appDefaulState","initialized","redusers","combineReducers","Profile","copyState","state","action","newPost","key","avatarUrl","newAvatar","length","push","Dialogs","newMessage","sideBar","Users","u","followed","users","count","filter","auth","app","form","formReducer","store","createStore","applyMiddleware","thunkMidlewarenk","Footer","className","s","content","copyright","pet","News","Music","Setting","Textarea","input","meta","props","textFieldBox","touched","error","Input","maxLegthCreator","maxLength","value","required","maxLength10","NewMessageReduxForm","reduxForm","onSubmit","handleSubmit","Field","textField","component","placeholder","onInput","e","target","style","height","scrollHeight","validate","sendNewMessage","NewMessage","addNewMessageValue","newMessageField","NewMessageContainer","connect","addMessageActionCreator","dialogsItem","dialogItemData","MessagesField","MessagesFieldData","DialogItem","item","to","MessagesItem","messageItem","src","img","alt","Preloader","preLoaders","preloader","preLoaderBackground","MainScreen","NewPostsReduxForm","htmlFor","textFieldLabel","textarea","sendBtn","NewPosts","formData","postText","Post","like","PostWall","wall","postMessage","NewPostsContainer","addPostActionCreator","getInitialized","getIsAuth","getLogin","getMainId","getIsWatchNow","getAnotherUserMainAvatar","getAnothersUserInfo","getMainAvatar","getAvatarUrlData","getUserId","getStatus","getUserInfoDate","getPostMessageData","getDialogsData","getMesasageData","getTotalUsersCount","getNumberOfUsersOnPage","getCurrentPage","getIsLoading","getIsFollowingInProgress","getUsersInProgressFollowing","PostWallContainer","map","Posts","compose","mainStatus","anotherUserStatus","withRouter","useState","editMode","setEditMode","setStatus","useEffect","statusBox","onClick","autoFocus","onBlur","onChange","currentTarget","UserInfo","info","dateB","ChangeAvatar","UserProfile","allAvatar","changeAvatarBox","React","createRef","avatarElement","urlInput","allAvatarElement","el","MainUserInfo","AnotherUserInfo","avatarBox","changeAvatar","current","opacity","ref","prevBtn","attributes","nodeValue","nextBtn","addBtn","userProfileContainer","this","match","params","Component","addAvatarActionCreator","element","UserProfileContainer","mapStateToProps","withAuthRedirect","RedirectComponent","UsersPage","title","UsersField","setAnotherUserIdSucsess","userAvatar","ToogleFollowbox","disabled","some","ToogleFollowBtn","follow","unfollow","toogleFollowStatus","userInfo","fullname","country","paginnatorBox","goLeftPage","MaxToLeft","setCurrentPage","OneToLeft","pagesBox","numberOfPages","goRigthPage","OneToRigth","MaxToRigth","UsersApiContainer","setTimeout","render","UsersContainer","Math","ceil","totalCount","FriendItem","Item","Friends","friendTrueData","prevProps","prevState","snapshot","setState","label","Box","SideBar","nav","box","activeClassName","active","SideBarContainer","ProfileContainer","setUserProfile","Header","header","loginBtn","HeaderContainer","LoginReduxForm","allFormError","Login","stopSubmit","_error","messages","App","setInitialized","path","DialogsContainer","promise","Promise","all","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02cd7e23.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"UsersField\":\"Users_UsersField__27Zu0\",\"UsersPage\":\"Users_UsersPage__3OQ66\",\"paginnatorBox\":\"Users_paginnatorBox__2jjgt\",\"goLeftPage\":\"Users_goLeftPage__2OAa-\",\"pagesBox\":\"Users_pagesBox__11U5X\",\"goRigthPage\":\"Users_goRigthPage__1m3iO\",\"OneToLeft\":\"Users_OneToLeft__16ijn\",\"OneToRigth\":\"Users_OneToRigth__3clHe\",\"MaxToRigth\":\"Users_MaxToRigth__3MILi\",\"MaxToLeft\":\"Users_MaxToLeft__1LZBQ\",\"avatar\":\"Users_avatar__3EJq4\",\"item\":\"Users_item__3Xip_\",\"ToogleFollowBtn\":\"Users_ToogleFollowBtn__Orjfn\",\"userInfo\":\"Users_userInfo__1aeW7\",\"fullname\":\"Users_fullname__1iTmp\",\"status\":\"Users_status__1ogln\",\"country\":\"Users_country__f_qnb\",\"city\":\"Users_city__1nfSS\",\"unfollow\":\"Users_unfollow__1OKAs\",\"follow\":\"Users_follow__2LaOb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preLoaders\":\"Preloader_preLoaders__2yVre\",\"preLoaderBackground\":\"Preloader_preLoaderBackground__2CiDq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MainScreen_content__3R9yL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wall\":\"PostWall_wall__Z3XCx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"posts_content__1oCMj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__3IHb-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"ChangeAvatar_avatar__2C2jQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"sideBar_nav__2NNjn\",\"active\":\"sideBar_active__3dePx\",\"box\":\"sideBar_box__3LbOU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"UserInfo_content__1fMxN\",\"name\":\"UserInfo_name__3ulCr\",\"status\":\"UserInfo_status__ymOn7\",\"info\":\"UserInfo_info__1PoaC\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as axios from \"axios\";\r\n\r\n\r\nconst instanse = axios.create({\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {'API-KEY': '818b16ba-6497-42b1-8359-46d83b14e351'},\r\n    withCredentials: true\r\n})\r\n\r\n\r\nexport const Api = {\r\n    security: {\r\n        getCaptchaUrl() {\r\n\r\n        }\r\n    },\r\n    auth: {\r\n        getAuthMe() {\r\n            return instanse.get(`auth/me`).then(response => response.data)\r\n        },\r\n        logIn(email, password) {\r\n            return instanse.post(`auth/login`, {\r\n                email: email,\r\n                password: password\r\n            })\r\n        },\r\n        logOut() {\r\n            return instanse.delete(`auth/login`)\r\n        }\r\n    },\r\n    users: {\r\n        getUsers(numberOfUsersOnPage, currentPage) {\r\n            return instanse.get(`users?count=${numberOfUsersOnPage}&page=${currentPage}`)\r\n                .then(response => response.data)\r\n        },\r\n        getFollowingUsers(numberOfUsersOnPage = 100, currentPage = 1) {\r\n            return instanse.get(`users?count=${numberOfUsersOnPage}&page=${currentPage}&friend=true`)\r\n                .then(response => response.data)\r\n        }\r\n    },\r\n    profile: {\r\n        getUserProfile(userId) {\r\n            return instanse.get(`profile/${userId}`).then(response => response.data)\r\n        },\r\n        getUserProfileStatus(userId) {\r\n            return instanse.get(`profile/status/${userId}`).then(response => response.data)\r\n        },\r\n        setUserProfileStatus(text) {\r\n            return instanse.put(`profile/status`, {\r\n                status: text\r\n            }).then(response => response.data)\r\n        }\r\n    },\r\n    follow: {\r\n        followUser(id) {\r\n            return instanse.post(`follow/${id}`).then(response => response.data)\r\n        },\r\n        unfollowUser(id) {\r\n            return instanse.delete(`follow/${id}`).then(response => response.data)\r\n\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import {Api} from \"../api/api\";\n\nlet addPost = \"ADD-POST\"\nlet changeAvatar = \"CHANGE-AVATAR\"\nlet nextAvatar = \"NEXT-AVATAR\"\nlet prevAvatar = \"PREV-AVATAR\"\nlet addAvatar = \"ADD-AVATAR\"\nlet TOOGLE_IS_WATCHING_ANOTHER_USER_NOW = \"TOOGLE_IS_WATCHING_ANOTHER_USER_NOW\"\nlet SET_ANOTHERS_USER_INFO = \"SET_ANOTHERS_USER_INFO\"\nlet SET_MAIN_USER_INFO = \"SET_MAIN_USER_INFO\"\nlet GET_USER_PROFILE_STATUS_SUCSESS = \"GET_USER_PROFILE_STATUS_SUCSESS\"\n// name: \"Dmitry K.\",\n//     birthdate: \"2 january\",\n//     city: \"Minsk\",\n//     education: \"BSU'11\",\n//     webSite: \"https://it-kamasutra.com\",\n//     status: \"\"\n\nlet ProfileDefaulState = {\n    userInfoDate: [\n        {\n            name: \"\",\n            birthdate: \"\",\n            city: \"\",\n            education: \"\",\n            webSite: \"\",\n            status: \"\"\n        }\n    ],\n    anothersUserInfo: [{\n        isWatchNow: false,\n        fullName: \"\",\n        aboutMe: \"\",\n        photos: {\n            large: \"\",\n            small: \"\"\n        },\n        status: \"\"\n    }],\n    postMessageData: [\n        {id: 1, message: \"Hi, how are you?\", likeCounter: \"20\", user: \"vlad\"},\n        {id: 2, message: \"Привет, как ты?\", likeCounter: \"15\", user: \"vlad\"},\n        {id: 3, message: \"Пgdgdfgdf?\", likeCounter: \"12\", user: \"vlad\"}\n    ],\n    avatarUrlData: [\n        {\n            id: 1,\n            url: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT0OKqoPKtc6zG0u7pS8C3klRQ-7n0KLvYTaQ&usqp=CAU\"\n        },\n        {id: 2, url: \"https://html5css.ru/css/img_lights.jpg\"},\n        {\n            id: 3,\n            url: \"https://external-preview.redd.it/wl_OMEWEzDWAyDGU8-k469mI89a0HvNryasEQHxfceQ.jpg?auto=webp&s=f739d6643f9a51389369f9bdd248443f7bca68ab\"\n        }\n    ],\n    mainAvatar: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT0OKqoPKtc6zG0u7pS8C3klRQ-7n0KLvYTaQ&usqp=CAU\",\n}\n\nexport const ProfileReducer = (state = ProfileDefaulState, action) => {\n    let copyState;\n    switch (action.type) {\n        case addPost:\n            let newPost = {\n                message: action.text,\n                likeCounter: 5,\n                user: \"vlad\"\n            }\n            copyState = {\n                ...state,\n                postMessageData: [...state.postMessageData, newPost],\n            }\n            return copyState\n        case nextAvatar:\n            copyState = {\n                ...state,\n                avatarUrlData: [...state.avatarUrlData]\n            }\n            for (let key of copyState.avatarUrlData) {\n                if (action.avatarUrl === key.url) {\n                    if (copyState.avatarUrlData[key.id]) {\n                        copyState.mainAvatar = copyState.avatarUrlData[key.id].url\n                    }\n                }\n            }\n            return copyState\n        case prevAvatar:\n            copyState = {\n                ...state,\n                avatarUrlData: [...state.avatarUrlData]\n            }\n            for (let key of copyState.avatarUrlData) {\n                if (action.avatarUrl === key.url) {\n                    if (copyState.avatarUrlData[key.id - 2]) {\n                        copyState.mainAvatar = copyState.avatarUrlData[key.id - 2].url\n                    }\n\n                }\n            }\n            return copyState\n\n        case addAvatar:\n            copyState = {\n                ...state,\n                avatarUrlData: [...state.avatarUrlData]\n            }\n            if (action.avatarUrl) {\n                let newAvatar = {\n                    id: copyState.avatarUrlData[copyState.avatarUrlData.length - 1].id + 1,\n                    url: action.avatarUrl\n                }\n                copyState.mainAvatar = newAvatar.url\n                copyState.avatarUrlData.push(newAvatar)\n            }\n\n            return copyState\n        case TOOGLE_IS_WATCHING_ANOTHER_USER_NOW:\n            copyState = {\n                ...state\n            }\n            copyState.anothersUserInfo[0].isWatchNow = action.isWatchNow\n            return copyState\n        case SET_MAIN_USER_INFO:\n            copyState = {\n                ...state\n            }\n            debugger\n            copyState.userInfoDate[0].name = action.mainUserInfo.fullName\n            copyState.userInfoDate[0].aboutMe = action.mainUserInfo.aboutMe\n            copyState.userInfoDate[0].status = action.mainUserInfo.responseStatus\n            return copyState\n        case SET_ANOTHERS_USER_INFO:\n            copyState = {\n                ...state\n            }\n            copyState.anothersUserInfo[0].fullName = action.anothersUserInfo.fullName\n            copyState.anothersUserInfo[0].aboutMe = action.anothersUserInfo.aboutMe\n            copyState.anothersUserInfo[0].photos.small = action.anothersUserInfo.photos.small\n            copyState.anothersUserInfo[0].status = action.anothersUserInfo.status\n            return copyState\n\n        case GET_USER_PROFILE_STATUS_SUCSESS:\n            copyState = {\n                ...state\n            }\n            copyState.userInfoDate[0].status = action.UserTextStatus\n            return copyState\n    }\n    return state\n}\n\nexport let addPostActionCreator = (text) => ({\n    type: addPost,\n    text\n})\nexport let changeAvatarActionCreator = (url) => ({\n    type: changeAvatar,\n    avatarUrl: url\n})\nexport let nextAvatarActionCreator = (url) => ({\n    type: nextAvatar,\n    avatarUrl: url\n})\nexport let prevAvatarActionCreator = (url) => ({\n    type: prevAvatar,\n    avatarUrl: url\n})\nexport let addAvatarActionCreator = (url) => ({\n    type: addAvatar,\n    avatarUrl: url\n})\n\nexport let toogleIsWatchingAnotherUserNow = (isWatchNow) => ({\n    type: TOOGLE_IS_WATCHING_ANOTHER_USER_NOW,\n    isWatchNow\n})\nexport let setAnotherUsetInfo = (anothersUserInfo) => ({\n    type: SET_ANOTHERS_USER_INFO,\n    anothersUserInfo\n})\nexport let setMainUserInfo = (mainUserInfo) => ({\n    type: SET_MAIN_USER_INFO,\n    mainUserInfo\n})\nexport let setUserProfileStatusSucsess = (UserTextStatus) => ({\n    type: GET_USER_PROFILE_STATUS_SUCSESS,\n    UserTextStatus\n})\n\n\nexport let setUserProfile = (userId, toogleIsLoading) => {\n    return (dispatch) => {\n        if (userId) {\n            dispatch(toogleIsWatchingAnotherUserNow(true))\n            dispatch(toogleIsLoading(true))\n            Api.profile.getUserProfile(userId)\n                .then(response => {\n                        Api.profile.getUserProfileStatus(userId).then(status=>{\n                            debugger\n                            dispatch(setAnotherUsetInfo({...response, status}))\n                            dispatch(toogleIsLoading(false))\n                        })\n\n                    }\n                )\n        } else {\n            dispatch(toogleIsWatchingAnotherUserNow(false))\n        }\n    }\n}\nexport let getUserProfileStatus = (mainUserId) => {\n    return (dispatch) => {\n        if (mainUserId) {\n            Api.profile.getUserProfileStatus(mainUserId)\n                .then(response => {\n                        dispatch(setUserProfileStatusSucsess(response))\n                    }\n\n                )\n\n        }\n    }\n}\nexport let setUserProfileStatus = (text) => {\n    return (dispatch) => {\n        Api.profile.setUserProfileStatus(text)\n            .then(response => {\n                debugger\n                    dispatch(setUserProfileStatusSucsess(text))\n                }\n            )\n    }\n}\n\nwindow.ProfileDefaulState = ProfileDefaulState\n\n\n","let addMessage = \"ADD-MESSAGE\"\n\nlet DialogsDefaulState = {\n    messageData: [\n        {id: 1, message: \"Привет\", avatar: \"http://petszona.ru/wp-content/uploads/2018/06/karby-sh.jpg\"},\n        {\n            id: 2,\n            message: \"Привет\",\n            avatar: \"https://cdnimg.rg.ru/img/content/187/94/47/iStock-644032024_d_850.jpg\"\n        },\n        {id: 1, message: \"Как дела?\", avatar: \"http://petszona.ru/wp-content/uploads/2018/06/karby-sh.jpg\"},\n        {\n            id: 2,\n            message: \"Крута, а у тебя?\",\n            avatar: \"https://cdnimg.rg.ru/img/content/187/94/47/iStock-644032024_d_850.jpg\"\n        },\n        {\n            id: 2,\n            message: \"Крута, а у тебя?\",\n            avatar: \"https://cdnimg.rg.ru/img/content/187/94/47/iStock-644032024_d_850.jpg\"\n        }\n    ],\n    dialogsData: [\n        {id: 1, name: \"Vladimir\"},\n        {id: 2, name: \"Denis\"},\n        {id: 3, name: \"Vlad\"},\n        {id: 4, name: \"Anya\"},\n        {id: 5, name: \"Zina\"}\n    ],\n}\n\nexport const DialogsReducer = (state = DialogsDefaulState, action) => {\n    let copyOfState\n    switch (action.type) {\n        case addMessage:\n            let newMessage = {\n                message: action.text,\n                avatar: \"https://cdnimg.rg.ru/img/content/187/94/47/iStock-644032024_d_850.jpg\"\n            }\n            copyOfState = {\n                ...state,\n                messageData: [...state.messageData, newMessage]\n            }\n            return copyOfState\n    }\n    return state\n}\n\nexport let addMessageActionCreator = (text) => ({\n    type: addMessage,\n    text\n})\n","import {Api} from \"../api/api\";\n\nlet add = \"ADD\"\nlet upd = \"UPD\"\n\nlet SideBarDefaulState = {\n}\n\nexport const SideBarReducer = (state = SideBarDefaulState, action) => {\n    return state\n}\n\n","import {Api} from \"../api/api\";\n\nlet FOLLOW = \"FOLLOW\"\nlet UNFOLLOW = \"UNFOLLOW\"\nlet SETUSERS = \"SET_USERS\"\nlet SETTOTALUSERSCOUNT = \"SET_TOTAL_USERS_COUNT\"\nlet SETCURRENTPAGE = \"SET_CURRENT_PAGE\"\nlet TOOGLEISLOADING = \"TOOGLE_IS_LOADING\"\nlet TOOGLE_IS_FOLLOWING_IN_PROGRESS_USER = \"TOOGLE_IS_FOLLOWING_IN_PROGRESS_USER\"\nlet SET_FRIEND_DATA = \"SET_FRIEND_DATA\"\n\nlet UsersDefaulState = {\n    totalUsersCount: 0,\n    currentPage: 1,\n    numberOfUsersOnPage: 5,\n    isLoading: false,\n    isFollowingInProgress: null,\n    usersInProgressFollowing: [],\n    usersData: [\n        // {\n        //     id: 1,\n        //     userAvatarUrl: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT0OKqoPKtc6zG0u7pS8C3klRQ-7n0KLvYTaQ&usqp=CAU\",\n        //     followed: true,\n        //     fullname: \"Dmitry K.\",\n        //     status: \"gmkdpfgmdpg\",\n        //     location: {\n        //         country: \"Belarus\",\n        //         city: \"Minsk\"\n        //     }\n        // },\n    ],\n    followingUsersData: []\n}\n\nexport const UsersReducer = (state = UsersDefaulState, action) => {\n    console.log(action)\n    let copyState;\n    switch (action.type) {\n        case FOLLOW:\n            copyState = {\n                ...state,\n                usersData: [...state.usersData]\n            }\n            for (let u of copyState.usersData) {\n                if (action.userId === u.id) {\n                    u.followed = true\n                }\n            }\n            return copyState\n\n        case UNFOLLOW:\n            copyState = {\n                ...state,\n                usersData: [...state.usersData]\n            }\n            for (let u of copyState.usersData) {\n                if (action.userId === u.id) {\n                    u.followed = false\n                }\n            }\n            return copyState\n        case SETUSERS:\n            copyState = {\n                ...state,\n                usersData: [...action.users]\n            }\n            return copyState\n        case SETTOTALUSERSCOUNT:\n            copyState = {\n                ...state,\n                totalUsersCount: action.count\n            }\n            return copyState\n        case SETCURRENTPAGE:\n            copyState = {\n                ...state,\n                currentPage: action.currentPage\n            }\n            return copyState\n        case TOOGLEISLOADING:\n            copyState = {\n                ...state,\n                isLoading: action.isLoading\n            }\n            return copyState\n        case TOOGLE_IS_FOLLOWING_IN_PROGRESS_USER:\n            copyState = {\n                ...state,\n                usersInProgressFollowing: action.isFollowingInProgress\n                    ? [...state.usersInProgressFollowing, action.userId]\n                    : state.usersInProgressFollowing.filter(id => id != action.userId)\n            }\n            return copyState\n        case SET_FRIEND_DATA:\n            copyState = {\n                ...state,\n                followingUsersData: action.data\n            }\n            console.log(\"setFriendData\")\n            return copyState\n        default:\n            return state\n    }\n}\n\nexport let followSucsess = (userId, user) => ({\n    type: FOLLOW,\n    userId,\n    user\n})\nexport let unfollowSucsess = (userId, user) => ({\n    type: UNFOLLOW,\n    userId,\n    user\n})\nexport let setUsers = (users) => ({\n    type: SETUSERS,\n    users\n})\nexport let setTotalUsersCount = (count) => ({\n    type: SETTOTALUSERSCOUNT,\n    count\n})\nexport let setCurrentPage = (currentPage) => ({\n    type: SETCURRENTPAGE,\n    currentPage\n})\nexport let toogleIsLoading = (isLoading) => ({\n    type: TOOGLEISLOADING,\n    isLoading\n})\nexport let toogleFollowingInProgressUser = (isFollowingInProgress, userId) => ({\n    type: TOOGLE_IS_FOLLOWING_IN_PROGRESS_USER,\n    isFollowingInProgress, userId\n})\nexport let setFriendDataSucsess = (data) => ({\n    type: SET_FRIEND_DATA,\n    data\n})\nexport const getUsers = (numberOfUsersOnPage, currentPage) => {\n    return (dispatch) => {\n        dispatch(toogleIsLoading(true))\n        Api.users.getUsers(numberOfUsersOnPage, currentPage)\n            .then(response => {\n                    dispatch(setUsers(response.items))\n                    dispatch(setTotalUsersCount(response.totalCount))\n                    dispatch(toogleIsLoading(false))\n                }\n            )\n    }\n}\nexport const toogleFollowStatus = (el) => {\n    return (dispatch) => {\n        dispatch(toogleFollowingInProgressUser(true, el.id))\n        if (el.followed) {\n            Api.follow.unfollowUser(el.id).then(response => {\n                dispatch(unfollowSucsess(el.id, el))\n                dispatch(toogleFollowingInProgressUser(false, el.id))\n                Api.users.getFollowingUsers()\n                    .then(response => {\n                            console.log(response)\n                            dispatch(setFriendDataSucsess(response.items))\n                        }\n                    )\n            })\n        } else {\n            Api.follow.followUser(el.id).then(response => {\n                dispatch(followSucsess(el.id, el))\n                dispatch(toogleFollowingInProgressUser(false, el.id))\n                Api.users.getFollowingUsers()\n                    .then(response => {\n                            console.log(response)\n                            dispatch(setFriendDataSucsess(response.items))\n                        }\n                    )\n            })\n        }\n    }\n}\nexport let setUserData = () => {\n    return (dispatch) => {\n        Api.users.getFollowingUsers()\n            .then(response => {\n                    console.log(response)\n                    dispatch(setFriendDataSucsess(response.items))\n                }\n            )\n\n    }\n}\n\n\nwindow.UsersDefaulState = UsersDefaulState\n\n\n\n","import {Api} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\nimport {setMainUserInfo} from \"./ProfileReducer\";\n\nlet SET_AUTH_USER_DATA = \"SET_AUTH_USER_DATA\"\nlet SET_ANOTHER_USER_ID = \"SET_ANOTHER_USER_ID\"\n\nlet authDefaulState = {\n    login: null,\n    mainUserId: null,\n    email: null,\n    isAuth: false,\n    anotherUserId: null\n}\n\nexport const authReducer = (state = authDefaulState, action) => {\n    let copyState;\n    switch (action.type) {\n        case SET_AUTH_USER_DATA:\n            copyState = {\n                ...state,\n                ...action.userAuthdata\n            }\n            return copyState\n        case SET_ANOTHER_USER_ID:\n            copyState = {\n                ...state,\n                anotherUserId: action.userId\n            }\n            return copyState\n        default:\n            return state\n    }\n}\n\nexport let setAuthUserDataSucsess = (login, email, mainUserId, isAuth) => ({\n    type: SET_AUTH_USER_DATA,\n    userAuthdata: {login, mainUserId, email, isAuth}\n})\nexport let setAnotherUserIdSucsess = (userId) => ({\n    type: SET_ANOTHER_USER_ID,\n    userId\n})\n\nexport let setAuthUserData = () => {\n    return (dispatch) => {\n        return Api.auth.getAuthMe().then(response => {\n                if (response.resultCode === 0) {\n                    Api.profile.getUserProfile(response.data.id).then((responsUser)=>{\n                        Api.profile.getUserProfileStatus(response.data.id).then((responseStatus)=>{\n                            dispatch(setMainUserInfo({...responsUser, responseStatus}))\n                        })\n\n\n                    })\n                    dispatch(setAuthUserDataSucsess(response.data.login, response.data.email, response.data.id, true))\n                }\n            })\n        }\n}\nexport let logIn = (login, password) => {\n    return (dispatch) => {\n        Api.auth.logIn(login, password).then(response => {\n                if (response.data.resultCode === 0) {\n                    dispatch(setAuthUserData())\n                } else {\n                    dispatch(stopSubmit(\"Login\", {_error: response.data.messages}))\n                }\n\n            }\n        )\n    }\n}\nexport let logOut = () => {\n    return (dispatch) => {\n        Api.auth.logOut().then(response => {\n                if (response.data.resultCode === 0) {\n                    dispatch(setAuthUserDataSucsess(null, null, null, false))\n                }\n\n            }\n        )\n    }\n}\n\n\nwindow.authDefaulState = authDefaulState\n\n\n","import {Api} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\nimport {setAuthUserData} from \"./authReducer\";\n\nlet SET_INITIALIZIED = \"SET_INITIALIZIED\"\n\n\nlet appDefaulState = {\n    initialized: false\n}\n\nexport const appReducer = (state = appDefaulState, action) => {\n    let copyState;\n    switch (action.type) {\n        case SET_INITIALIZIED:\n            copyState = {\n                ...state,\n                initialized: true\n            }\n            return copyState\n        default:\n            return state\n    }\n}\n\nexport let setInitializedSucsess = () => ({\n    type: SET_INITIALIZIED\n})\n\nexport let setInitialized = () => (dispatch) => {\n        let promise = dispatch(setAuthUserData())\n        Promise.all([promise]).then((response)=>{\n            dispatch(setInitializedSucsess())\n        })\n}\n\n\n\nwindow.appDefaulState = appDefaulState\n\n\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport {ProfileReducer} from \"./ProfileReducer\";\nimport {DialogsReducer} from \"./DialogsReducer\";\nimport {SideBarReducer} from \"./SideBarReducer\";\nimport {UsersReducer} from \"./UsersReducer\";\nimport {authReducer} from \"./authReducer\";\nimport thunkMidlewarenk from 'redux-thunk';\nimport { reducer as formReducer } from 'redux-form'\nimport {appReducer} from \"./appReducer\";\n\nlet redusers = combineReducers({\n    Profile: ProfileReducer,\n    Dialogs: DialogsReducer,\n    sideBar: SideBarReducer,\n    Users: UsersReducer,\n    auth: authReducer,\n    app: appReducer,\n    form: formReducer\n})\n\nlet store = createStore(redusers, applyMiddleware(thunkMidlewarenk))\n\nwindow.store = store\n\nexport default store","import s from \"./Footer.module.css\";\n\nlet Footer = ()=>{\n    return (\n        <div className={s.content}>\n            <div className={s.name}>Vladimir</div>\n            <div className={s.copyright}>Copyright</div>\n            <div className={s.pet}>Pet react project</div>\n        </div>\n\n    )\n}\n\nexport default Footer;","let News = ()=>{\n    return (\n        <div>\n            News\n        </div>\n    )\n}\n\n\nexport default News;","let Music = ()=>{\n    return (\n        <div>\n            Music\n        </div>\n    )\n}\n\n\nexport default Music;","let Setting = ()=>{\n    return (\n        <div>\n            {/*<div className={title}>Setting</div>*/}\n\n            {/*<div className={darkThemeBox}><button className={s.darkThemeBtn}></button></div>*/}\n\n</div>\n    )\n}\n\n\nexport default Setting;","import React from \"react\"\r\nimport s from \"./FormControl.module.css\"\r\n\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    return (\r\n        <div>\r\n            <div className={s.textFieldBox}>\r\n                <textarea {...input} {...props} className={meta.touched && meta.error?props.className +\" \"+s.error: props.className}/>\r\n                <div>\r\n                    {meta.touched?<span>{meta.error}</span>:\"\"}\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    return (\r\n        <div>\r\n            <div className={s.textFieldBox}>\r\n                <input {...input} {...props} className={meta.touched && meta.error?props.className +\" \"+s.error: props.className}/>\r\n                <div>\r\n                    {meta.touched?<span>{meta.error}</span>:\"\"}\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from \"react\"\r\n\r\nexport const maxLegthCreator = maxLength => value =>{\r\n    if(value.length>maxLength){\r\n        return `Max length is ${maxLength}`\r\n    } return undefined\r\n}\r\n\r\nexport const required = value =>{\r\n    if(value){\r\n        return undefined\r\n    } return \"Field is required\"\r\n}","import s from \"./NewMessage.module.css\"\nimport React from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../../../../common/FormsControls/FormControl\";\nimport {maxLegthCreator, required} from \"../../../../../utils/validators/validator\";\n\nlet maxLength10 = maxLegthCreator(10)\nlet NewMessageForm = (props) => {\n    let niceScroll = (e) => {\n        e.target.style.height = \"5px\"\n        e.target.style.height = e.target.scrollHeight + \"px\"\n    }\n    return (\n        <form className={s.newMessage} onSubmit={props.handleSubmit}>\n            <Field className={s.textField}\n                   component={Textarea}\n                   name={\"newMessageField\"}\n                   id={\"textFieldId\"}\n                   placeholder={\"Write a message...\"}\n                   onInput={niceScroll}\n                   validate={[required, maxLength10]}\n            />\n            <button className={s.sendNewMessage}></button>\n        </form>\n\n    )\n}\nlet NewMessageReduxForm = reduxForm({form:\"newMessage\"})(NewMessageForm)\n\nlet NewMessage = (props) => {\n    let onSubmit = (value)=>{\n        props.addNewMessageValue(value.newMessageField)\n    }\n    return (\n        <NewMessageReduxForm onSubmit={onSubmit}/>\n\n    )\n}\n\n\nexport default NewMessage;","import React from \"react\";\r\nimport {addMessageActionCreator} from \"../../../../../redux/DialogsReducer\";\r\nimport NewMessage from \"./NewMessage\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        addNewMessageValue: (text)=>{\r\n            dispatch(addMessageActionCreator(text))\r\n        }\r\n    }\r\n}\r\nconst NewMessageContainer = connect(mapStateToProps, mapDispatchToProps)(NewMessage);\r\n\r\nexport default NewMessageContainer;","import s from \"./Dialogs.module.css\"\nimport NewMessageContainer from \"./MessageField/NewMessage/NewMessageContainer\";\nimport {Redirect} from \"react-router-dom\";\nimport React from \"react\";\n\nlet Dialogs = (props) => {\n    return (\n        <div className={s.content}>\n            <div className={s.dialogsItem}>\n                {props.dialogItemData}\n            </div>\n            <div className={s.MessagesField}>\n                {props.MessagesFieldData}\n                <NewMessageContainer/>\n            </div>\n        </div>\n    )\n}\n\n\nexport default Dialogs;","import s from \"./DialogItem.module.css\"\nimport {NavLink} from \"react-router-dom\";\n\n\nlet DialogItem = (props) => {\n    return (\n        <NavLink className={s.item} to={`/dialogs/${props.id}`}>\n            <div className={s.avatar}></div>\n            <div className={s.name}>{props.name}</div>\n            <div className={`${s.status}`}></div>\n        </NavLink>\n    )\n}\n\n\nexport default DialogItem;","import s from \"./MessagesItem.module.css\"\n\n\n\nlet MessagesItem = (props) => {\n    return (\n        <div className={s.content}>\n            <div className={s.messageItem}>\n                <div className={s.avatar}><img src={props.img} alt=\"\"/></div>\n                <div className={s.message}>{props.message}</div>\n            </div>\n\n        </div>\n\n    )\n}\n\n\nexport default MessagesItem;\n","export default __webpack_public_path__ + \"static/media/829.20951e82.gif\";","import s from \"./Preloader.module.css\"\r\nimport preloader from \"../../assets/829.gif\";\r\nimport React from \"react\";\r\n\r\nlet Preloader = (props) => {\r\n\r\n    return (\r\n        <div className={s.preLoaders}>\r\n            <img src={preloader} alt=\"\"/>\r\n            <div className={s.preLoaderBackground}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;\r\n","import s from \"./MainScreen.module.css\"\n\n\nlet MainScreen = () => {\n    return (\n        <div className={s.content}>\n\n        </div>\n    )\n}\n\nexport default MainScreen;","import s from \"./NewPosts.module.css\"\nimport React from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLegthCreator, required} from \"../../../../../utils/validators/validator\";\nimport {Textarea} from \"../../../../common/FormsControls/FormControl\";\n\nlet maxLength10 = maxLegthCreator(10)\nlet NewPostsForm = (props) => {\n\n    return (\n        <form className={s.form} onSubmit={props.handleSubmit}>\n            <label\n                htmlFor={\"textFieldId\"}\n                className={s.textFieldLabel}>My posts</label>\n\n            <div className={s.textField}>\n                <Field className={s.textarea}\n                        placeholder={\"your news...\"}\n                        name={\"postText\"}\n                        id={\"textFieldId\"} component={Textarea}\n                        validate={[required, maxLength10]}/></div>\n            <button className={s.sendBtn}>Send</button>\n        </form>\n    )\n}\nlet NewPostsReduxForm = reduxForm({\n    form: \"newPost\"\n})(NewPostsForm)\n\nlet NewPosts = (props) => {\n    let onSubmit = (formData) => {\n        props.addPost(formData.postText)\n    }\n    return (\n        <NewPostsReduxForm onSubmit={onSubmit} {...props}/>\n    )\n}\n\nexport default NewPosts;","import s from \"./post.module.css\";\n\n\nlet Post = (props)=>{\n    return (\n\n    <div className={s.item}>\n        <div className={s.avatar}></div>\n        <div className={s.text}>{props.message}<div>Like {props.like}</div></div>\n    </div>\n)\n}\n\nexport default Post;","import Post from \"./Post/Post\";\nimport s from \"./PostWall.module.css\";\n\nconst PostWall = (props) => {\n\n    return (\n        <div className={s.wall}>\n            {props.postMessage}\n        </div>\n\n    )\n}\n\nexport default PostWall;","import React from \"react\";\r\nimport {addPostActionCreator} from \"../../../../../redux/ProfileReducer\";\r\nimport NewPosts from \"./NewPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        addPost:(text) => {\r\n            dispatch(addPostActionCreator(text))\r\n        }\r\n    }\r\n}\r\nconst NewPostsContainer = connect(mapStateToProps, mapDispatchToProps)(NewPosts);\r\n\r\nexport default NewPostsContainer;","export let getInitialized = state =>{\r\n    return state.app.initialized\r\n}\r\nexport let getIsAuth = state =>{\r\n    return state.auth.isAuth\r\n}\r\nexport let getLogin = state =>{\r\n    return state.auth.login\r\n}\r\nexport let getMainId = state =>{\r\n    return state.auth.mainUserId\r\n}\r\nexport let getIsWatchNow = state =>{\r\n    return state.Profile.anothersUserInfo[0].isWatchNow\r\n}\r\nexport let getAnotherUserMainAvatar = state =>{\r\n    return state.Profile.anothersUserInfo[0].photos.small\r\n}\r\nexport let getAnothersUserInfo = state =>{\r\n    return state.Profile.anothersUserInfo\r\n}\r\nexport let getMainAvatar = state =>{\r\n    return state.Profile.mainAvatar\r\n}\r\nexport let getAvatarUrlData = state =>{\r\n    return state.Profile.avatarUrlData\r\n}\r\nexport let getUserId = state =>{\r\n    return state.Profile.userInfoDate.status\r\n}\r\nexport let getStatus = state =>{\r\n    return state.Profile.anothersUserInfo\r\n}\r\nexport let getUserInfoDate = state =>{\r\n    return state.Profile.userInfoDate\r\n}\r\nexport let getPostMessageData = state =>{\r\n    return state.Profile.postMessageData\r\n}\r\nexport let getDialogsData = state =>{\r\n    return state.Dialogs.dialogsData\r\n}\r\nexport let getMesasageData = state =>{\r\n    return state.Dialogs.messageData\r\n}\r\nexport let getTotalUsersCount = state =>{\r\n    return state.Users.totalUsersCount\r\n}\r\nexport let getNumberOfUsersOnPage = state =>{\r\n    return state.Users.numberOfUsersOnPage\r\n}\r\nexport let getCurrentPage = state =>{\r\n    return state.Users.currentPage\r\n}\r\nexport let getIsLoading = state =>{\r\n    return state.Users.isLoading\r\n}\r\nexport let getIsFollowingInProgress = state =>{\r\n    return state.Users.isFollowingInProgress\r\n}\r\nexport let getUsersInProgressFollowing = state =>{\r\n    return state.Users.usersInProgressFollowing\r\n}\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport PostWall from \"./PostWall\";\r\nimport Post from \"./Post/Post\";\r\nimport {getPostMessageData} from \"../../../../../Selectors/Selectors\";\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        postMessage: getPostMessageData(state)\r\n            .map(post => <Post message={post.message} like={post.likeCounter}/>)\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n\r\n    }\r\n}\r\nconst PostWallContainer = connect(mapStateToProps, mapDispatchToProps)(PostWall);\r\n\r\nexport default PostWallContainer;","import NewPosts from \"./NewPosts/NewPosts\";\nimport PostWall from \"./PostWall/PostWall\";\nimport s from \"./posts.module.css\"\nimport NewPostsContainer from \"./NewPosts/NewPostsContainer\";\nimport PostWallContainer from \"./PostWall/PostWallContainer\";\n\n\nlet Posts = (props) => {\n    return (\n        <div className={s.content}>\n            <NewPostsContainer/>\n            <PostWallContainer/>\n        </div>\n    )\n}\n\nexport default Posts;","import s from \"./UserInfo.module.css\"\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfileStatus, setUserProfile, setUserProfileStatus} from \"../../../../../redux/ProfileReducer\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\n\r\nlet ProfileStatus = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.mainStatus)\r\n\r\n    let activateEditMode = ()=>{\r\n        if(props.isWatchNow){\r\n        } else {\r\n            setEditMode(true)\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        setStatus(props.mainStatus)\r\n    }, [props.mainStatus])\r\n    let deactivateEditMode = ()=>{\r\n        if(props.isWatchNow){\r\n        } else {\r\n            debugger\r\n            setEditMode(false)\r\n            props.setUserProfileStatus(status)\r\n        }\r\n    }\r\n    let onChangeStatus = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    return (\r\n        <div className={s.statusBox}>\r\n            {!editMode &&\r\n            <div>\r\n                    <span onClick={activateEditMode}>{props.isWatchNow?props.anotherUserStatus : (props.mainStatus?props.mainStatus : \"-----\")}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input value={status} autoFocus={true}\r\n                    onBlur={deactivateEditMode}\r\n                    onChange={onChangeStatus}\r\n                    type=\"text\"/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isWatchNow: state.Profile.anothersUserInfo[0].isWatchNow,\r\n        mainUserId: state.auth.mainUserId,\r\n        mainStatus: state.Profile.userInfoDate[0].status,\r\n        anotherUserStatus: state.Profile.anothersUserInfo[0].status\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getUserProfileStatus,\r\n        setUserProfileStatus\r\n    }),\r\n    withRouter\r\n)(ProfileStatus);","import s from \"./UserInfo.module.css\"\nimport ProfileStatus from \"./ProfileStatus\"\n\nlet UserInfo = (props) => {\n    return (\n        <div className={s.content}>\n            <div className={s.name}>{props.name}</div>\n            <div className={s.status}><ProfileStatus id={props.id}/></div>\n            <div className={s.info}>\n                <div className={s.dateB}>Date of Birth: {props.birthdate}</div>\n                <div className={s.city}>City: {props.city}</div>\n                <div className={s.education}>Education: {props.education}</div>\n                <div className={s.webSite}>Web Site: {props.webSite}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default UserInfo;","import s from \"./ChangeAvatar.module.css\"\n\n\n\nlet ChangeAvatar = (props) => {\n\n    return (\n        <img src={props.avatarUrl} alt=\"\" className={s.avatar}/>\n\n    )\n}\n\nexport default ChangeAvatar;\n\n\n","import s from \"./UserProfile.module.css\"\nimport UserInfo from \"./UserInfo/UserInfo\";\nimport React from \"react\";\nimport ChangeAvatar from \"./ChangeAvatar/ChangeAvatar\";\nimport {getUserProfileStatus} from \"../../../../redux/ProfileReducer\";\n\n\nlet UserProfile = (props) => {\n    console.log(props)\n    let changeAvatarBox = React.createRef()\n    let avatarElement = React.createRef()\n    let urlInput = React.createRef()\n    let allAvatarElement = React.createRef()\n\n    let allAvatar\n    if (props.isWatchNow) {\n        allAvatar = \"\"\n    } else {\n        allAvatar =\n            props.avatarUrlData.map(el => <ChangeAvatar avatarUrl={el.url}/>\n            )\n    }\n    let addAvatar = () => {\n        if (!props.isWatchNow) {\n            props.addAvatar(urlInput.current.value)\n            urlInput.current.value = \"\"\n        }\n    }\n\n    let changeAvatar = () => {\n        if (!props.isWatchNow) {\n            props.changeAvatar()\n            if (changeAvatarBox.current.style.opacity === \"1\") {\n                changeAvatarBox.current.style.opacity = \"0\"\n            } else {\n                changeAvatarBox.current.style.opacity = \"1\"\n\n            }\n        }\n    }\n\n\n    let nextAvatar = () => {\n        if (!props.isWatchNow) {\n            props.nextAvatar(avatarElement.current.attributes.src.nodeValue)\n        }\n    }\n    let prevAvatar = () => {\n        if (!props.isWatchNow) {\n            props.prevAvatar(avatarElement.current.attributes.src.nodeValue)\n        }\n    }\n    let MainUserInfo\n    if(props.isWatchNow){\n        MainUserInfo=\"\"\n    } else{\n        debugger\n        MainUserInfo = props.userInfoDate\n            .map(el => <UserInfo\n                name={el.name}\n                status={props.status}\n                birthdate={el.birthdate}\n                city={el.city}\n                userId={props.userId}\n                education={el.education}\n                webSite={el.webSite}/>)\n    }\n    let AnotherUserInfo\n    if(props.isWatchNow){\n        AnotherUserInfo = props.anothersUserInfo\n            .map(el => <UserInfo\n                name={el.fullName}\n                id={el.id}\n            />)\n    } else {\n        AnotherUserInfo=\"\"\n    }\n\n    return (\n        <div className={s.content}>\n            <div className={s.avatarBox}>\n                <div className={s.avatar} onClick={changeAvatar}>\n                    <img ref={avatarElement} src={props.mainAvatar} alt=\"\"/>\n                </div>\n\n                <div className={s.changeAvatarBox} ref={changeAvatarBox}>\n                    <div className={s.allAvatar}\n                         ref={allAvatarElement}>{allAvatar}</div>\n                    <input type=\"text\" placeholder={\"New avatar url...\"}\n                           className={s.urlInput} ref={urlInput}/>\n                    <button className={s.prevBtn} onClick={prevAvatar}>prev\n                    </button>\n                    <button className={s.nextBtn} onClick={nextAvatar}>next\n                    </button>\n                    <button className={s.addBtn} onClick={addAvatar}>add\n                    </button>\n                </div>\n            </div>\n            {props.isWatchNow ? AnotherUserInfo : MainUserInfo}\n        </div>\n    )\n}\n\nexport default UserProfile;\n\n\n","import React from \"react\";\r\nimport {\r\n    addAvatarActionCreator,\r\n    changeAvatarActionCreator, getUserProfileStatus,\r\n    nextAvatarActionCreator,\r\n    prevAvatarActionCreator\r\n} from \"../../../../redux/ProfileReducer\";\r\n\r\nimport UserProfile from \"./UserProfile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getAnothersUserInfo,\r\n    getAnotherUserMainAvatar, getAvatarUrlData,\r\n    getIsWatchNow, getMainAvatar, getMainId,\r\n    getStatus,\r\n    getUserId,\r\n    getUserInfoDate\r\n} from \"../../../../Selectors/Selectors\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\n\r\nclass userProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n\r\n            if (this.props.match.params.userId) {\r\n                this.props.getUserProfileStatus(this.props.match.params.userId)\r\n            } else {\r\n                debugger\r\n                this.props.getUserProfileStatus(this.props.mainUserId)\r\n            }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <UserProfile isWatchNow={this.props.isWatchNow}\r\n                         mainAvatar={this.props.mainAvatar}\r\n                         anothersUserInfo={this.props.anothersUserInfo}\r\n                         avatarUrlData={this.props.avatarUrlData}\r\n                         userId={this.props.userId}\r\n                         status={this.props.status}\r\n                         userInfoDate={this.props.userInfoDate}\r\n            />\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    if (state.Profile.anothersUserInfo[0].isWatchNow) {\r\n        return {\r\n            isWatchNow: getIsWatchNow(state),\r\n            mainAvatar: getAnotherUserMainAvatar(state),\r\n            anothersUserInfo: getAnothersUserInfo(state)\r\n        }\r\n    } else {\r\n        return {\r\n            mainAvatar: getMainAvatar(state),\r\n            mainUserId: getMainId(state),\r\n            isWatchNow: getIsWatchNow(state),\r\n            avatarUrlData: getAvatarUrlData(state),\r\n            userId: getUserId(state),\r\n            status: getStatus(state),\r\n            userInfoDate: getUserInfoDate(state)\r\n        }\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addAvatar: (url) => {\r\n            dispatch(addAvatarActionCreator(url))\r\n        },\r\n        changeAvatar: () => {\r\n            dispatch(changeAvatarActionCreator())\r\n        },\r\n        nextAvatar: (element) => {\r\n            dispatch(nextAvatarActionCreator(element))\r\n        },\r\n        prevAvatar: (element) => {\r\n            dispatch(prevAvatarActionCreator(element))\r\n        },\r\n        getUserProfileStatus\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withRouter\r\n)(userProfileContainer);\r\n","import MainScreen from \"./MainScreen\"\nimport Posts from \"./Posts/Posts\";\nimport s from \"./Profile.module.css\"\nimport UserProfileContainer from \"./UserProfile/UserProfileContainer\";\n\n\nlet Profile = (props) => {\n    return (\n        <div className={s.content}>\n            <MainScreen/>\n            <UserProfileContainer/>\n            <Posts/>\n        </div>\n    )\n}\n\nexport default Profile;","import {Redirect, withRouter} from \"react-router-dom\";\r\nimport Preloader from \"../components/Preloader/Preloader\";\r\nimport Profile from \"../components/appWrapperContent/Profile/Profile\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        isAuth: state.auth.isAuth,\r\n        isLoading: state.Users.isLoading,\r\n        anotherUserId: state.auth.anotherUserId\r\n    }\r\n}\r\n\r\nlet withAuthRedirect = (Component)=> {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if ((!this.props.isAuth && this.props.anotherUserId == null) || (!this.props.isAuth && Component == \"Dialogs\")) {\r\n                return <Redirect to={'/login'}/>\r\n            }\r\n            return (\r\n                <>\r\n                    {this.props.isLoading ? <Preloader/> : \"\"}\r\n                    <Component {...this.props}/>\r\n                </>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    return connect(mapStateToProps, {})(RedirectComponent);\r\n\r\n}\r\n\r\nexport default (withAuthRedirect);","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport DialogItem from \"./DialogItem\";\r\nimport MessagesItem from \"./MessageField/MessagesItem\";\r\nimport withAuthRedirect from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {getDialogsData, getMesasageData} from \"../../../Selectors/Selectors\";\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        dialogItemData: getDialogsData(state).map(el =>\r\n            (<DialogItem\r\n                name={el.name}\r\n                id={el.id}\r\n            />)),\r\n        MessagesFieldData: getMesasageData(state).map(el =>\r\n            (<MessagesItem\r\n                message={el.message}\r\n                img={el.avatar}\r\n            />))\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n","export default __webpack_public_path__ + \"static/media/profile-02-512.8bda664b.png\";","import React from \"react\";\r\nimport s from \"./Users.module.css\";\r\nimport userAvatar from \"../../../assets/profile-02-512.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet Users = (props) => {\r\n    return (\r\n        <div className={s.UsersPage}>\r\n            <div className={s.title}>Users</div>\r\n            <div className={s.UsersField}>\r\n                <div className={s.UsersField}>\r\n                    {props.usersData.map(el =>\r\n                        <div className={s.item}>\r\n                            <div className={s.avatar}>\r\n                                <NavLink onClick={()=>{props.setAnotherUserIdSucsess(el.id)}} to={`/profile/${el.id}`}>\r\n                                    <img src={el.photos.small != null ?\r\n                                        el.photos.small : userAvatar} alt=\"\"/>\r\n                                </NavLink>\r\n                            </div>\r\n                            <div className={s.ToogleFollowbox}>\r\n                                <button disabled={props.usersInProgressFollowing.some(id => id == el.id)}\r\n                                        className={el.followed ?\r\n                                            `${s.ToogleFollowBtn + \" \" + s.follow}` :\r\n                                            `${s.ToogleFollowBtn + \" \" + s.unfollow}`}\r\n                                        onClick={(e) => {\r\n                                            props.toogleFollowStatus(el)\r\n                                        }}>\r\n                                    {el.followed ? <span>Unfollow</span>\r\n                                        : <span>Follow</span>}\r\n                                </button>\r\n                            </div>\r\n                            <div className={s.userInfo}>\r\n                                <div className={s.fullname}>{el.name}</div>\r\n                                <div className={s.status}>{\"el.status\"}</div>\r\n                                <div className={s.country}>{\"el.country\"}</div>\r\n                                <div className={s.city}>{\"el.city\"}</div>\r\n                            </div>\r\n                        </div>)}\r\n                </div>\r\n            </div>\r\n            <div className={s.paginnatorBox}>\r\n                <div className={s.goLeftPage}>\r\n                    {props.currentPage === 1 ?\r\n                        <button disabled={props.isLoading} className={s.MaxToLeft} onClick={() => {\r\n                            props.setCurrentPage(1)\r\n                            props.getUsers()\r\n                        }}><span></span></button> :\r\n                        <button disabled={props.isLoading} className={s.MaxToLeft} onClick={() => {\r\n                            props.setCurrentPage(1)\r\n                            props.getUsers()\r\n                        }}><span></span></button>}\r\n                    {props.currentPage === 1 ?\r\n                        <button disabled={props.isLoading} className={s.OneToLeft} onClick={() => {\r\n                            if (props.currentPage > 1) {\r\n                                props.setCurrentPage(props.currentPage - 1)\r\n                                props.getUsers()\r\n                            }\r\n                        }}></button> : <button className={s.OneToLeft} disabled={props.isLoading} onClick={() => {\r\n                            if (props.currentPage > 1) {\r\n                                props.setCurrentPage(props.currentPage - 1)\r\n                                props.getUsers()\r\n                            }\r\n                        }}></button>}\r\n\r\n                </div>\r\n                <div className={s.pagesBox}>\r\n                    <span>\r\n                        {props.currentPage}\r\n                    </span>\r\n                    <span>\r\n                        .\r\n                        .\r\n                        .\r\n                    </span>\r\n                    <span>\r\n                        {props.numberOfPages}\r\n                    </span>\r\n                </div>\r\n                <div className={s.goRigthPage}>\r\n                    {props.currentPage === props.numberOfPages ?\r\n                        <button disabled={props.isLoading} className={s.OneToRigth}\r\n                                onClick={() => {\r\n                                    if (props.currentPage < props.numberOfPages) {\r\n                                        props.setCurrentPage(props.currentPage + 1)\r\n                                        props.getUsers()\r\n                                    }\r\n                                }}>\r\n\r\n                        </button> :\r\n                        <button className={s.OneToRigth} disabled={props.isLoading}\r\n                                onClick={() => {\r\n                                    if (props.currentPage < props.numberOfPages) {\r\n                                        props.setCurrentPage(props.currentPage + 1)\r\n                                        props.getUsers()\r\n                                    }\r\n                                }}>\r\n\r\n                        </button>\r\n                    }\r\n                    {props.currentPage === props.numberOfPages ?\r\n                        <button disabled className={s.MaxToRigth} disabled={props.isLoading}\r\n                                onClick={() => {\r\n                                    props.setCurrentPage(props.numberOfPages)\r\n                                    props.getUsers()\r\n                                }}>\r\n                            <span></span>\r\n                        </button> :\r\n                        <button className={s.MaxToRigth} disabled={props.isLoading} onClick={() => {\r\n                            props.setCurrentPage(props.numberOfPages)\r\n                            props.getUsers()\r\n                        }}>\r\n                            <span></span>\r\n                        </button>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getUsers,\r\n    setCurrentPage,\r\n    setUserData,\r\n    toogleFollowingInProgressUser,\r\n    toogleFollowStatus,\r\n} from \"../../../redux/UsersReducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../../Preloader/Preloader\";\r\nimport {setAnotherUserIdSucsess} from \"../../../redux/authReducer\";\r\nimport {\r\n    getCurrentPage,\r\n    getIsAuth, getIsFollowingInProgress,\r\n    getIsLoading,\r\n    getNumberOfUsersOnPage,\r\n    getTotalUsersCount, getUsersInProgressFollowing\r\n} from \"../../../Selectors/Selectors\";\r\n\r\nclass UsersApiContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.numberOfUsersOnPage, this.props.currentPage)\r\n\r\n    }\r\n\r\n    getUsers = () => {\r\n        setTimeout(() => {\r\n            this.props.getUsers(this.props.numberOfUsersOnPage, this.props.currentPage)}, 100)\r\n    }\r\n    render = () => {\r\n\r\n        return <>\r\n            {this.props.isLoading ?\r\n                <Preloader/> : \"\"}\r\n            <Users getUsers={this.getUsers}\r\n                   usersData={this.props.usersData}\r\n                   setCurrentPage={this.props.setCurrentPage}\r\n                   currentPage={this.props.currentPage}\r\n                   numberOfPages={this.props.numberOfPages}\r\n                   toogleFollowStatus={this.props.toogleFollowStatus}\r\n                   isLoading={this.props.isLoading}\r\n                   usersInProgressFollowing={this.props.usersInProgressFollowing}\r\n                   setAnotherUserIdSucsess={this.props.setAnotherUserIdSucsess}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        usersData: state.Users.usersData,\r\n        numberOfPages: Math.ceil(getTotalUsersCount(state) / getNumberOfUsersOnPage(state)),\r\n        numberOfUsersOnPage: getNumberOfUsersOnPage(state),\r\n        currentPage: getCurrentPage(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        isLoading: getIsLoading(state),\r\n        isAuth: getIsAuth(state),\r\n        isFollowingInProgress: getIsFollowingInProgress(state),\r\n        usersInProgressFollowing: getUsersInProgressFollowing(state)\r\n    }\r\n}\r\nconst UsersContainer = connect(mapStateToProps, {\r\n    toogleFollowingInProgressUser,\r\n    setCurrentPage,\r\n    getUsers,\r\n    toogleFollowStatus,\r\n    setUserData,\r\n    setAnotherUserIdSucsess\r\n})(UsersApiContainer);\r\n\r\nexport default UsersContainer;\r\n","import s from \"./Frienditem.module.css\"\n\nlet FriendItem = (props) => {\n\n    return (\n        <div className={s.Item}>\n            <div className={s.avatar}><img src={props.avatar} alt=\"\"/></div>\n            <div className={s.name}>{props.name}</div>\n        </div>\n    )\n}\n\nexport default FriendItem;","import s from \"./Friends.module.css\"\nimport FriendItem from \"./FriendItem/FriendItem\";\nimport {connect} from \"react-redux\";\n\nimport React from \"react\";\nimport {setUserData} from \"../../../redux/UsersReducer\";\n\nclass Friends extends React.Component {\n    componentDidMount() {\n        this.props.setUserData()\n    }\n\n    state = {\n        friendTrueData: this.props.followingUsersData.map((el) => (<FriendItem avatar={el.photos.small} name={el.name}/>))\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(prevProps.followingUsersData.length !== this.props.followingUsersData.length){\n            this.setState({\n                friendTrueData: this.props.followingUsersData.map((el) => (<FriendItem avatar={el.photos.small} name={el.name}/>))\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div className={s.content}>\n                <div className={s.label}>Friends</div>\n                <div className={s.Box}>\n                    {this.state.friendTrueData}\n                </div>\n            </div>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        followingUsersData: state.Users.followingUsersData,\n        usersData: state.Users.usersData\n    }\n}\nexport default connect(mapStateToProps, {setUserData})(Friends);","import s from \"./sideBar.module.css\"\nimport {NavLink} from \"react-router-dom\";\nimport Friends from \"./Friends/Friends\";\n\nconst SideBar = (props) => {\n\n    return (\n        <nav className={s.nav}>\n            <div className={s.box}>\n                <NavLink activeClassName={s.active} to=\"/profile\">Profile</NavLink>\n            </div>\n            <div className={s.box}>\n                <NavLink activeClassName={s.active} to=\"/dialogs\">Messages</NavLink>\n            </div>\n            <div className={s.box}>\n                <NavLink activeClassName={s.active} to=\"/feed\">News</NavLink>\n            </div>\n            <div className={s.box}>\n                <NavLink activeClassName={s.active} to=\"/music\">Music</NavLink>\n            </div>\n            <div className={s.box}>\n                <NavLink activeClassName={s.active} to=\"/setting\">Settings</NavLink>\n            </div>\n\n            <Friends/>\n            <div className={s.box}>\n                <NavLink activeClassName={s.active} to=\"/users\">Find users</NavLink>\n            </div>\n        </nav>\n    )\n}\n\n\nexport default SideBar;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport sideBar from \"./sideBar\";\r\n\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n\r\n    return{\r\n\r\n    }\r\n}\r\n\r\nconst SideBarContainer = connect(mapStateToProps, mapDispatchToProps)(sideBar);\r\n\r\nexport default SideBarContainer;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {toogleIsLoading} from \"../../../redux/UsersReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {getUserProfileStatus, setUserProfile} from \"../../../redux/ProfileReducer\";\r\nimport withAuthRedirect from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {getMainId} from \"../../../Selectors/Selectors\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        debugger\r\n        if(this.props.match.params.userId){\r\n            this.props.setUserProfile(this.props.match.params.userId, this.props.toogleIsLoading)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <Profile/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        mainUserId: getMainId(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {toogleIsLoading, setUserProfile, getUserProfileStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);","import s from \"./Header.module.css\"\nimport {NavLink, Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {logOut} from \"../../redux/authReducer\";\nimport React from \"react\";\n\nclass Header extends React.Component {\n\n\n    render() {\n        if (this.props.isAuth) {\n            return (\n                <header className={s.header}>\n                    <div className={s.img}><img src=\"\" alt=\"\"/></div>\n                    <div className={s.loginBtn}>\n                        {this.props.isAuth ? <span>{this.props.login}\n                                <NavLink to={\"/login\"} onClick={() => this.props.logOut()}>Log Out</NavLink></span> :\n                            <NavLink to={\"/login\"}>Login</NavLink>}\n                    </div>\n                </header>\n            )\n        }\n        return (\n            <header className={s.header}>\n                <div className={s.img}><img src=\"\" alt=\"\"/></div>\n                <div className={s.loginBtn}>\n                    {this.props.isAuth ? <span>{this.props.login}\n                            </span> :\n                        <NavLink to={\"/login\"}>Login</NavLink>}\n                </div>\n            </header>)\n    }\n\n\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\nexport default connect(mapStateToProps, {logOut})(Header);","import Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {setAuthUserData} from \"../../redux/authReducer\";\nimport React from \"react\";\nimport {compose} from \"redux\";\nimport {toogleIsLoading} from \"../../redux/UsersReducer\";\nimport {setUserProfile} from \"../../redux/ProfileReducer\";\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\nimport {getIsAuth, getLogin} from \"../../Selectors/Selectors\";\n\n\nclass HeaderContainer extends React.Component {\n\n\n    render() {\n        return (\n            <Header {...this.props}/>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuth: getIsAuth(state),\n        login: getLogin(state)\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, {setAuthUserData})\n)(HeaderContainer);","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Api} from \"../../api/api\";\r\nimport {Input} from \"../common/FormsControls/FormControl\";\r\nimport {required} from \"../../utils/validators/validator\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {logIn, setAuthUserData} from \"../../redux/authReducer\";\r\nimport s from \"../common/FormsControls/FormControl.module.css\"\r\n\r\n\r\nlet LoginForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field type=\"text\" name={\"login\"} validate={[required]} component={Input} placeholder={\"login\"}/>\r\n            </div>\r\n            <div>\r\n                <Field type=\"text\" name={\"password\"} validate={[required]} component={Input} placeholder={\"password\"}/>\r\n            </div>\r\n            <div>\r\n                <Field type=\"checkbox\" name={\"rememberMe\"} component={Input}/>remember me\r\n            </div>\r\n            {props.error && <div className={s.allFormError}>{props.error}</div>}\r\n            <div>\r\n                <button type=\"submit\" placeholder={\"login\"}>log in</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nlet LoginReduxForm = reduxForm({\r\n    form: \"Login\"\r\n})(LoginForm)\r\n\r\nclass Login extends React.Component{\r\n    onSubmit = (formData)=>{\r\n       this.props.logIn(formData.login, formData.password)\r\n    }\r\n    render() {\r\n        if (this.props.isAuth) {\r\n            return <Redirect to={'/profile'}/>\r\n        }\r\n        return(\r\n            <div>\r\n                <div><h1>Login</h1></div>\r\n                <LoginReduxForm onSubmit={this.onSubmit}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nlet mapStateToProps = state =>{\r\n    return{\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{setAuthUserData,logIn})(Login)","import './App.css';\nimport Footer from \"./components/Footer/Footer\";\nimport {Route, withRouter} from \"react-router-dom\";\nimport News from \"./components/appWrapperContent/News/News\";\nimport Music from \"./components/appWrapperContent/Music/Music\";\nimport Setting from \"./components/appWrapperContent/Setting/Setting\";\nimport DialogsContainer from \"./components/appWrapperContent/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/appWrapperContent/Users/UsersContainer\";\nimport SideBarContainer from \"./components/sideBar/sideBarContainer\";\nimport ProfileContainer from \"./components/appWrapperContent/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/appWrapperContent/Login\";\nimport {Component} from \"react\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {setInitialized} from \"./redux/appReducer\";\nimport Preloader from \"./components/Preloader/Preloader\";\nimport {getInitialized} from \"./Selectors/Selectors\";\n\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.setInitialized()\n    }\n\n    render() {\n        if(!this.props.initialized){\n            return <Preloader/>\n        }\n        return (\n            <div className=\"appWrapper\">\n                <HeaderContainer/>\n                <SideBarContainer/>\n                <div className=\"appWrapperContent\">\n                    <Route path={\"/profile/:userId?\"} render={() =>\n                        <ProfileContainer/>}\n                    />\n                    <Route path={\"/dialogs\"} render={() =>\n                        <DialogsContainer/>}\n                    />\n                    <Route path={\"/users\"} render={() =>\n                        <UsersContainer/>}\n                    />\n                    <Route path={\"/feed\"} render={() => <News/>}/>\n                    <Route path={\"/music\"} render={() => <Music/>}/>\n                    <Route path={\"/setting\"} render={() => <Setting/>}/>\n                    <Route path={\"/login\"} render={() => <Login/>}/>\n                </div>\n                <Footer/>\n            </div>\n        )\n    }\n}\n\nlet mapStateToProps = state => {\n    return {\n        initialized: getInitialized(state)\n    }\n}\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, {setInitialized})\n)(App);\n\n\n\n\n\n\n","import reportWebVitals from './reportWebVitals';\nimport store from \"./redux/redux-store\"\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport App from \"./App\";\nimport {Provider} from \"react-redux\";\n\n\n    ReactDOM.render(\n        <React.StrictMode>\n            <BrowserRouter>\n                <Provider store={store}>\n                    <App />\n                </Provider>\n            </BrowserRouter>\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"UserProfile_content__1_Z_e\",\"avatarBox\":\"UserProfile_avatarBox__1M4MC\",\"avatar\":\"UserProfile_avatar__1FS2Y\",\"changeAvatarBox\":\"UserProfile_changeAvatarBox__2Yg5J\",\"addBtn\":\"UserProfile_addBtn__2qHha\",\"urlInput\":\"UserProfile_urlInput__1krly\",\"nextBtn\":\"UserProfile_nextBtn__23jl3\",\"prevBtn\":\"UserProfile_prevBtn__1CCsA\",\"allAvatar\":\"UserProfile_allAvatar__2AB5c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textFieldBox\":\"FormControl_textFieldBox__2wMZs\",\"error\":\"FormControl_error__3p1eB\",\"allFormError\":\"FormControl_allFormError__2F4OJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2GV9z\",\"img\":\"Header_img__PGeZA\",\"loginBtn\":\"Header_loginBtn__eSg7e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewPosts_form__ANX6U\",\"textField\":\"NewPosts_textField__1icaL\",\"textarea\":\"NewPosts_textarea__1Fup_\",\"textFieldLabel\":\"NewPosts_textFieldLabel__33bpr\",\"sendBtn\":\"NewPosts_sendBtn__ZBTfK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Footer_content__3R8dh\",\"name\":\"Footer_name__1LXc2\",\"copyright\":\"Footer_copyright__3LvbW\",\"pet\":\"Footer_pet__Eh2RT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"DialogItem_item__HhA03\",\"avatar\":\"DialogItem_avatar__W4fCM\",\"name\":\"DialogItem_name__13EzV\",\"status\":\"DialogItem_status__2TOHc\",\"active\":\"DialogItem_active__1IHHq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MessagesItem_content__1bvUB\",\"messageItem\":\"MessagesItem_messageItem__2tPpV\",\"avatar\":\"MessagesItem_avatar__3VV2T\",\"message\":\"MessagesItem_message__3IE_i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Dialogs_content__3sUxn\",\"dialogsItem\":\"Dialogs_dialogsItem__32i-A\",\"MessagesField\":\"Dialogs_MessagesField__2xsLM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newMessage\":\"NewMessage_newMessage__3Ud_t\",\"textField\":\"NewMessage_textField__24Apc\",\"sendNewMessage\":\"NewMessage_sendNewMessage__1aLE2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"post_item__1oE4U\",\"avatar\":\"post_avatar__5EviO\",\"text\":\"post_text__2bpw9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Friends_content__3wfKO\",\"label\":\"Friends_label__2zmbi\",\"Box\":\"Friends_Box__22bQX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Item\":\"Frienditem_Item__1ZcNT\",\"avatar\":\"Frienditem_avatar__3UC51\",\"name\":\"Frienditem_name__14Jtt\"};"],"sourceRoot":""}